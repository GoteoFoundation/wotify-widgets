/* Define two variables as the loop limits */
@from : 0;
@to : 10;

/* Create a Parametric mixin and add a guard operation */
.loop(@index) when(@index =< @to) {

  /* As the mixin is called CSS is outputted */
  &:nth-child(@{index}) {
    color: rgb(@index * 20, @index * 20,@index * 20);
  }

  /* Interation call and operation */
  .loop(@index + 1);
}



// Taken from https://github.com/brenna/csshexagon
/*
  The MIT License (MIT)
  Copyright (c) 2014 Brenna O'Brien
*/

.getHexagon(@width: 200px, @borderWidth: 0px, @borderColor: #333, @color: #fff) {
  @decimals: 3;

  // @width works best with even numbers - browser rounding effs up with odds
  @shadowBlur: 5px;
  @shadowColor: #000;
  @shadowAlpha: 0.4;
  @shadow: 0 0 5px #000;

  //calculated values
  @root2 : 1.41421356237;
  @root3 : 1.73205080757;
  @scaleFactor: 0.57735026919; // = tan(30deg) *this smushes a square into a 60deg/120deg rhombus:
  @scaleFactor1: 1/@scaleFactor;
  @translateBG: -@height/2 + @capBorderHeight/2;

  @height: @width/@root3;
  @capWidth : @width/@root2; // caps = the top and bottom triangles
  @capBorderWidth: @borderWidth*@root2;
  @capBorderHeight: @borderWidth*2/@root3; //needed to offset bg pos
  @border: solid @borderWidth @borderColor;
  @capBorder: solid @capBorderWidth @borderColor;
  @coverWidth: @width - @borderWidth*2; //the cover up rectangle
  @coverHeight: @height - @borderWidth*@scaleFactor*2;
  @capHeight: @height - @capBorderHeight;
  @bgHeight: @capHeight*2;
  @bgHeight: @height*2 - (@capBorderHeight*2);
  @bgHeight: @height*2 - (@borderWidth*2/@root3)*2;
  @bgHeight: @height*2 - (@borderWidth/@root3)*4;

  position: relative;
  width: @width;
  height: @height;
  margin: @height/2 auto;
  background-color: @color;
  background-size: auto @bgHeight; //fit to total height, minus borders
  background-position: center;
  border-left: @border;
  border-right: @border;
  text-align:left;

  .hex-top,
  .hex-bottom {
    position: absolute;
    z-index: 1;
    width: @capWidth;
    height: @capWidth;
    overflow: hidden;
    -webkit-transform: scaleY(@scaleFactor) rotate(-45deg);
    -ms-transform: scaleY(@scaleFactor) rotate(-45deg);
    transform: scaleY(@scaleFactor) rotate(-45deg);
    background: inherit;
    left: (@width - @capWidth)/2 - @borderWidth; //offset by half the difference in
  }

  //counter transform the bg image on the caps
  .hex-top:after,
  .hex-bottom:after {
    content: "";
    position: absolute;
    width: @coverWidth;
    height: @capHeight;

    -webkit-transform: rotate(45deg) scaleY(@scaleFactor1) translateY(@translateBG);
    -ms-transform: rotate(45deg) scaleY(@scaleFactor1) translateY(@translateBG);
    transform: rotate(45deg) scaleY(@scaleFactor1) translateY(@translateBG);

    -webkit-transform-origin: 0 0;
    -ms-transform-origin: 0 0;
    transform-origin: 0 0;

    background: inherit;
    //not sure why but this 1px correction seems necessary :(
    // margin-left: 1px;
  }

  //send top to top and bottom to bottom
  .hex-top {
    top: -@width/@root2/2;  //half the rhombus height
    border-top: @capBorder;
    border-right: @capBorder;

    &:after {
      background-position: center top;
    }
  }

  .hex-bottom {
    bottom: -@width/@root2/2; //half the rhombus height
    border-bottom: @capBorder;
    border-left: @capBorder;

    &:after {
      background-position: center bottom;
    }
  }

  //cover up extra shadows
  &:after {
    content: "";
    position: absolute;
    top: @borderWidth*@scaleFactor;
    left: 0;
    width: @coverWidth;
    height: @coverHeight;
    z-index: 2;
    background: inherit;
  }

  // Role
  .role {
    z-index: 10;
    bottom:-@width/4;
    right:-@width/6;
    position: absolute;
    width: @width/2;
    height: @width/2;
    border-radius:@width/2;

    &.role-admin {
      background: url(../img/roles/admin.svg) no-repeat 0 0 e('/') 100% 100%;
    }
    &.role-user {
      background: url(../img/roles/user.svg) no-repeat 0 0 e('/') 100% 100%;
    }
    &.role-maker {
      background: url(../img/roles/maker.svg) no-repeat 0 0 e('/') 100% 100%;
    }
    &.role-feeder {
      background: url(../img/roles/feeder.svg) no-repeat 0 0 e('/') 100% 100%;
    }
    &.role-taker {
      background: url(../img/roles/taker.svg) no-repeat 0 0 e('/') 100% 100%;
    }
    &.role-team {
      background: url(../img/roles/team.svg) no-repeat 0 0 e('/') 100% 100%;
    }
    &.role-facilitator {
      background: url(../img/roles/facilitator.svg) no-repeat 0 0 e('/') 100% 100%;
    }
    &.role-superadmin {
      background: url(../img/roles/superadmin.svg) no-repeat 0 0 e('/') 100% 100%;
    }

  }
}
